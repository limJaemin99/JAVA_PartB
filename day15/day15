day15



★★★★★오버로딩, 오버라이딩, 업캐스팅, 다운캐스팅 정의가 중요★★★★★

------------------------------------------------------------------------------------------------
필드 선언 팁
부모클래스의 필드 : 모든 자식클래스들이 공통으로 사용할 필드
자식클래스의 필드 : 그 자식만 고유하게 사용할 필드
------------------------------------------------------------------------------------------------
# Casting(형변환)
- 업캐스팅 (자식 ▶ 부모) : 자동캐스팅
	부모클래스 참조변수 = new 자식생성자();
	참조변수.부모필드

- 다운캐스팅 (자식 ◀ 부모) : 강제캐스팅 (수동)
   [형식] 	자식클래스 참조변수 = (자식클래스)업캐스팅 객체;
	참조변수.자식필드
	
       ● 강제 캐스팅을 하려면 타입 체크가 필요하다(instanceOf 이용)

- instanceOf : boolean타입, 객체가 형변환이 가능한지 true/false값으로 리턴
   [형식]	객체 instanceof 클래스명


# 추상클래스(abstract)
- 추상클래스는 'abstract' 키워드를 사용한다.
	@ abstract : 부모클래스를 추상화한다.
- 추상클래스는 자식들이 공통으로 사용하는 필드,메소드를 [선언]만 한다.
	(자식 클래스에서 구체화한다.)
- 추상클래스는 사용시 객체를 생성하지 않는다.
- 추상메소드 선언시 ex) public 'abstract' int area();와 같이 선언한다. (관계 제어자 뒤에 abstract 사용)
	이렇게 선언한 메소드는 모든 자식클래스들에서 꼭 필수로 오버라이딩해야한다.
	(그래서 모든 자식들이 공통으로 사용하는 메소드만 추상메소드로 선언해야한다.)

# 추상클래스를 상속받는 자식클래스
- 부모 추상 클래스를 상속했다면 자식클래스명에 오류밑줄이 발생한다.
	이것은 해당 자식클래스에서 부모클래스의 추상메소드를 오버라이딩하라는 뜻이다.
